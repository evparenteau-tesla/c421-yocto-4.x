/*
 * Copyright 2016 WinSystems, Inc.
 * Copyright 2012 Freescale Semiconductor, Inc.
 * Copyright 2011 Linaro Ltd.
 *
 * The code contained herein is licensed under the GNU General Public
 * License. You may obtain a copy of the GNU General Public License
 * Version 2 or later at the following locations:
 *
 * http://www.opensource.org/licenses/gpl-license.html
 * http://www.gnu.org/copyleft/gpl.html
 */

/dts-v1/;


#include "imx6dl-pinfunc.h"
#include "imx6dl.dtsi"
#include <dt-bindings/gpio/gpio.h>
#include <dt-bindings/input/input.h>
#include <dt-bindings/interrupt-controller/irq.h>

#define GP_PCIE_WAKE_N      <&gpio1 0 GPIO_ACTIVE_LOW>
#define GP_PCIE_DIS_N       <&gpio1 1 GPIO_ACTIVE_HIGH>
#define GP_PCIE_RST_N       <&gpio1 2 GPIO_ACTIVE_LOW>
#define GP_LED_USER         <&gpio1 26 GPIO_ACTIVE_HIGH>
#define GP_ENET_PHY_INT     <&gpio1 28 GPIO_ACTIVE_LOW>
#define GP_SPI1_SS0         <&gpio2 30 GPIO_ACTIVE_HIGH>
#define GP_USB_HUB_RST      <&gpio3 21 GPIO_ACTIVE_LOW>
#define GP_OTG_PWR_EN       <&gpio6 7 GPIO_ACTIVE_HIGH>
#define GP_ENET_PHY_RESET   <&gpio6 31 GPIO_ACTIVE_LOW>

/ {
    model = "WinSystems i.MX6 SOLO SBC-C421";
    compatible = "fsl,imx6solo-c421", "fsl,imx6dl";
  };

/ {
    clocks {
        codec_osc: codec_osc {
            compatible = "fixed-clock";
            #clock-cells = <0>;
            clock-frequency = <14318000>;
        };
    };

    memory {
        reg = <0x10000000 0x40000000>;
    };

    regulators {
        compatible = "simple-bus";
        #address-cells = <1>;
        #size-cells = <0>;

        reg_v5a: regulator@0 {
            compatible = "regulator-fixed";
            reg = <0>;
            regulator-name = "reg_v5a";
            regulator-min-microvolt = <5000000>;
            regulator-max-microvolt = <5000000>;
            regulator-always-on;
        };

        reg_v3p3a: regulator@1 {
            compatible = "regulator-fixed";
            reg = <1>;
            regulator-name = "reg_v3p3a";
            regulator-min-microvolt = <3300000>;
            regulator-max-microvolt = <3300000>;
            regulator-always-on;
        };

        reg_v3p3s: regulator@2 {
            compatible = "regulator-fixed";
            reg = <2>;
            regulator-name = "reg_v3p3s";
            vin-supply = <&reg_v3p3a>;
            regulator-min-microvolt = <3300000>;
            regulator-max-microvolt = <3300000>;
            regulator-always-on;
        };

        reg_otg_pwr: regulator@3 {
            compatible = "regulator-fixed";
            reg = <3>;
            regulator-name = "reg_otg_pwr";
            regulator-min-microvolt = <5000000>;
            regulator-max-microvolt = <5000000>;
            gpio = GP_OTG_PWR_EN;
            enable-active-high;
        };
    };
};

&cpu0 {
    arm-supply = <&sw1a_reg>;
    soc-supply = <&sw1c_reg>;
};

&ecspi1 {
    fsl,spi-num-chipselects = <1>;
    cs-gpios = GP_SPI1_SS0;
    pinctrl-names = "default";
    pinctrl-0 = <&pinctrl_ecspi1>;
    status = "okay";

    flash: m25p80@0 {
        compatible = "st,m25p32";
        reg = <0>;
        spi-max-frequency = <20000000>;

        partition@0 {
            label = "bootloader";
            reg = <0x0 0x60000>;
        };

        partition@1 {
            label = "env";
            reg = <0x60000 0x10000>;
        };

        partition@2 {
            label = "dtb";
            reg = <0x70000 0x10000>;
        };

        partition@3 {
            label = "recovery";
            reg = <0x80000 0x380000>;
        };
    };
};

&fec {
    pinctrl-names = "default";
    pinctrl-0 = <&pinctrl_enet>;
    phy-mode = "rgmii";
    phy-handle = <&phy0>;
    #if 0
    phy-reset-gpios = GP_ENET_PHY_RESET;
    #endif
    status = "okay";

    mdio {
        #address-cells = <1>;
        #size-cells = <0>;

        phy0: ethernet-phy@0 {
            compatible = "ethernet-phy-ieee802.3-c22";
            reg = <0>;
        };
    };
};

&can1 {
    pinctrl-names = "default";
    pinctrl-0 = <&pinctrl_flexcan1>;
    status = "okay";
};

&gpc {
    fsl,ldo-bypass = <1>;
    fsl,wdog-reset = <1>;
};

&i2c1 {
    clock-frequency = <100000>;
    pinctrl-names = "default";
    pinctrl-0 = <&pinctrl_i2c1>;
    status = "okay";

    pmic: pfuze100@08 {
        compatible = "fsl,pfuze100";
        reg = <0x08>;

        regulators {
            sw1a_reg: sw1ab {
                regulator-min-microvolt = <300000>;
                regulator-max-microvolt = <1875000>;
                regulator-boot-on;
                regulator-always-on;
                regulator-ramp-delay = <6250>;
            };

            sw1c_reg: sw1c {
                regulator-min-microvolt = <300000>;
                regulator-max-microvolt = <1875000>;
                regulator-boot-on;
                regulator-always-on;
                regulator-ramp-delay = <6250>;
            };

            sw2_reg: sw2 {
                regulator-min-microvolt = <800000>;
                regulator-max-microvolt = <3300000>;
                regulator-boot-on;
                regulator-always-on;
            };

            sw3a_reg: sw3a {
                regulator-min-microvolt = <400000>;
                regulator-max-microvolt = <1975000>;
                regulator-boot-on;
                regulator-always-on;
            };

            sw3b_reg: sw3b {
                regulator-min-microvolt = <400000>;
                regulator-max-microvolt = <1975000>;
                regulator-boot-on;
                regulator-always-on;
            };

            sw4_reg: sw4 {
                regulator-min-microvolt = <800000>;
                regulator-max-microvolt = <3300000>;
            };

            swbst_reg: swbst {
                regulator-min-microvolt = <5000000>;
                regulator-max-microvolt = <5150000>;
            };

            snvs_reg: vsnvs {
                regulator-min-microvolt = <1000000>;
                regulator-max-microvolt = <3000000>;
                regulator-boot-on;
                regulator-always-on;
            };

            vref_reg: vrefddr {
                regulator-boot-on;
                regulator-always-on;
            };

            vgen1_reg: vgen1 {
                regulator-min-microvolt = <800000>;
                regulator-max-microvolt = <1550000>;
            };

            vgen2_reg: vgen2 {
                regulator-min-microvolt = <800000>;
                regulator-max-microvolt = <1550000>;
            };

            vgen3_reg: vgen3 {
                regulator-min-microvolt = <1800000>;
                regulator-max-microvolt = <3300000>;
            };

            vgen4_reg: vgen4 {
                regulator-min-microvolt = <1800000>;
                regulator-max-microvolt = <3300000>;
                regulator-always-on;
            };

            vgen5_reg: vgen5 {
                regulator-min-microvolt = <1800000>;
                regulator-max-microvolt = <3300000>;
                regulator-always-on;
            };

            vgen6_reg: vgen6 {
                regulator-min-microvolt = <1800000>;
                regulator-max-microvolt = <3300000>;
                regulator-always-on;
            };
        };
    };
};

&iomuxc {
    pinctrl-names = "default";
    pinctrl-0 = <&pinctrl_hog>;

    imx6solo-c421 {
        pinctrl_ecspi1: ecspi1grp {
            fsl,pins = <
                MX6QDL_PAD_EIM_D16__ECSPI1_SCLK        0x100b1
                MX6QDL_PAD_EIM_D17__ECSPI1_MISO        0x100b1
                MX6QDL_PAD_EIM_D18__ECSPI1_MOSI        0x100b1
                MX6QDL_PAD_EIM_EB2__GPIO2_IO30         0x80000000  // cs0
            >;
        };

        pinctrl_enet: enetgrp {
            fsl,pins = <
                MX6QDL_PAD_ENET_MDIO__ENET_MDIO        0x1b0b0
                MX6QDL_PAD_ENET_MDC__ENET_MDC          0x1b0b0
                MX6QDL_PAD_RGMII_TXC__RGMII_TXC        0x1b0b0
                MX6QDL_PAD_RGMII_TD0__RGMII_TD0        0x1b0b0
                MX6QDL_PAD_RGMII_TD1__RGMII_TD1        0x1b0b0
                MX6QDL_PAD_RGMII_TD2__RGMII_TD2        0x1b0b0
                MX6QDL_PAD_RGMII_TD3__RGMII_TD3        0x1b0b0
                MX6QDL_PAD_RGMII_TX_CTL__RGMII_TX_CTL  0x1b0b0
                MX6QDL_PAD_ENET_REF_CLK__ENET_TX_CLK   0x1b0b0
                MX6QDL_PAD_RGMII_RXC__RGMII_RXC        0x1b0b0
                MX6QDL_PAD_RGMII_RD0__RGMII_RD0        0x1b0b0
                MX6QDL_PAD_RGMII_RD1__RGMII_RD1        0x1b0b0
                MX6QDL_PAD_RGMII_RD2__RGMII_RD2        0x1b0b0
                MX6QDL_PAD_RGMII_RD3__RGMII_RD3        0x1b0b0
                MX6QDL_PAD_RGMII_RX_CTL__RGMII_RX_CTL  0x1b0b0
                MX6QDL_PAD_EIM_BCLK__GPIO6_IO31        0x1b0b0      // rgmii_reset_n
                MX6QDL_PAD_ENET_TX_EN__GPIO1_IO28      0x000b1      // Micrel RGMII Phy Interrupt
            >;
        };

        pinctrl_flexcan1: flexcan1grp {
            fsl,pins = <
                MX6QDL_PAD_KEY_COL2__FLEXCAN1_TX       0x1b0b0
                MX6QDL_PAD_KEY_ROW2__FLEXCAN1_RX       0x1b0b0
            >;
        };

        pinctrl_hog: hoggrp {
            fsl,pins = < 
                MX6QDL_PAD_GPIO_0__GPIO1_IO00          0x80000000      // pcie_wake_n
                MX6QDL_PAD_GPIO_1__GPIO1_IO01          0x000b0         // pcie_dis_n
                MX6QDL_PAD_GPIO_2__GPIO1_IO02          0x000b0         // pcie_rst#
                MX6QDL_PAD_GPIO_3__GPIO1_IO03          0x80000000      // gpio0
                MX6QDL_PAD_GPIO_4__GPIO1_IO04          0x80000000      // gpio1
                MX6QDL_PAD_GPIO_5__GPIO1_IO05          0x80000000      // gpio2
                MX6QDL_PAD_GPIO_6__GPIO1_IO06          0x80000000      // gpio3
                MX6QDL_PAD_GPIO_7__GPIO1_IO07          0x000b0         // uart4_te
                MX6QDL_PAD_GPIO_8__GPIO1_IO08          0x80000000      // id0
                MX6QDL_PAD_GPIO_9__GPIO1_IO09          0x80000000      // id1
                MX6QDL_PAD_EIM_D21__GPIO3_IO21         0x000b0         // usb_hub_reset_n
                MX6QDL_PAD_CSI0_DAT12__GPIO5_IO30      0x000b0         // uart2_rxen#
                MX6QDL_PAD_CSI0_DAT13__GPIO5_IO31      0x000b0         // uart4_rxen#
                MX6QDL_PAD_CSI0_DAT14__GPIO6_IO00      0x000b0         // uart3_rxen#
                MX6QDL_PAD_CSI0_PIXCLK__GPIO5_IO18     0x000b0         // uart2_te#
                MX6QDL_PAD_CSI0_DAT16__GPIO6_IO02      0x000b0         // uart3_te#
                MX6QDL_PAD_NANDF_CLE__GPIO6_IO07       0x030b0         // usb_otg_pwr_en
                MX6QDL_PAD_NANDF_ALE__GPIO6_IO08       0x000b0         // spi1_wp#
                MX6QDL_PAD_NANDF_CS0__GPIO6_IO11       0x80000000      // pmic_int_n
                MX6QDL_PAD_NANDF_CS1__GPIO6_IO14       0x80000000      // usb_otg_oc
                MX6QDL_PAD_GPIO_16__GPIO7_IO11         0x80000000      // id2
                MX6QDL_PAD_SD1_DAT2__WDOG1_B           0x108b0         // watchdog 1
            >;
        };

        pinctrl_i2c1: i2c1grp {
            fsl,pins = <
                MX6QDL_PAD_CSI0_DAT8__I2C1_SDA         0x4001b8b1
                MX6QDL_PAD_CSI0_DAT9__I2C1_SCL         0x4001b8b1
            >;
        };

        pinctrl_uart1: uart1grp {
            fsl,pins = <
                MX6QDL_PAD_CSI0_DAT10__UART1_TX_DATA   0x1b0b1
                MX6QDL_PAD_CSI0_DAT11__UART1_RX_DATA   0x1b0b1
                MX6QDL_PAD_EIM_D19__UART1_CTS_B        0x1b0b1
                MX6QDL_PAD_EIM_D20__UART1_RTS_B        0x1b0b1
            >;
        };

        pinctrl_uart2: uart2grp {
            fsl,pins = <
                MX6QDL_PAD_EIM_D26__UART2_TX_DATA      0x1b0b1
                MX6QDL_PAD_EIM_D27__UART2_RX_DATA      0x1b0b1
                MX6QDL_PAD_EIM_D28__UART2_CTS_B        0x1b0b1
            >;
        };

        pinctrl_uart3: uart3grp {
            fsl,pins = <
                MX6QDL_PAD_SD4_CMD__UART3_TX_DATA      0x1b0b1
                MX6QDL_PAD_SD4_CLK__UART3_RX_DATA      0x1b0b1
                MX6QDL_PAD_EIM_D30__UART3_CTS_B        0x1b0b1
            >;
        };

        pinctrl_uart4: uart4grp {
            fsl,pins = <
                MX6QDL_PAD_KEY_COL0__UART4_TX_DATA     0x1b0b1
                MX6QDL_PAD_KEY_ROW0__UART4_RX_DATA     0x1b0b1
                MX6QDL_PAD_CSI0_DAT17__UART4_CTS_B     0x1b0b1
            >;
        };

        pinctrl_usbotg: usbotggrp {
            fsl,pins = <
                MX6QDL_PAD_ENET_RX_ER__USB_OTG_ID      0x17059
            >;
        };

        pinctrl_usdhc3: usdhc3grp {
            fsl,pins = <
                MX6QDL_PAD_SD3_CMD__SD3_CMD            0x17059
                MX6QDL_PAD_SD3_CLK__SD3_CLK            0x10059
                MX6QDL_PAD_SD3_DAT0__SD3_DATA0         0x17059
                MX6QDL_PAD_SD3_DAT1__SD3_DATA1         0x17059
                MX6QDL_PAD_SD3_DAT2__SD3_DATA2         0x17059
                MX6QDL_PAD_SD3_DAT3__SD3_DATA3         0x17059
                MX6QDL_PAD_SD3_DAT4__SD3_DATA4         0x17059
                MX6QDL_PAD_SD3_DAT5__SD3_DATA5         0x17059
                MX6QDL_PAD_SD3_DAT6__SD3_DATA6         0x17059
                MX6QDL_PAD_SD3_DAT7__SD3_DATA7         0x17059
                MX6QDL_PAD_SD3_RST__SD3_RESET          0x17059
            >;
        };
    };
};

&pcie {
    power-on-gpio = GP_PCIE_DIS_N;
    reset-gpio = GP_PCIE_RST_N;
    wake-up-gpio = GP_PCIE_WAKE_N;
    status = "okay";
};

&uart1 {
    pinctrl-names = "default";
    pinctrl-0 = <&pinctrl_uart1>;
    status = "okay";
};

&uart2 {
    pinctrl-names = "default";
    pinctrl-0 = <&pinctrl_uart2>;
    status = "okay";
};

&uart3 {
    pinctrl-names = "default";
    pinctrl-0 = <&pinctrl_uart3>;
    status = "okay";
};

&uart4 {
    pinctrl-names = "default";
    pinctrl-0 = <&pinctrl_uart4>;
    status = "okay";
};

&usbh1 {
    reset-gpios = GP_USB_HUB_RST;
    status = "okay";
};

&usbotg {
    vbus-supply = <&reg_otg_pwr>;
    pinctrl-names = "default";
    pinctrl-0 = <&pinctrl_usbotg>;
    disable-over-current;
    status = "okay";
};

&usdhc3 {
    pinctrl-names = "default";
    pinctrl-0 = <&pinctrl_usdhc3>;
    bus-width = <8>;
    keep-power-in-suspend;
    status = "okay";
};

&wdog1 {
    status = "okay";
};
